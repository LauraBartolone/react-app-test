$breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
) !default;

@function is-number($value) {
    @return type-of($value) == "number";
}

@function is-absolute-length($value) {
    @return is-number($value) and index("cm" "mm" "in" "px" "pt" "pc", unit($value)) !=null;
}

@mixin breakpoint($breakpoint, $dir : min) {
    @if is-absolute-length($breakpoint) {
        @media only screen and (#{$dir}-width: $breakpoint) {
            @content;
        }
    }

    @else {
        @media only screen and (#{$dir}-width: map-get($map: $breakpoints, $key: $breakpoint)) {
            @content;
        }
    }
}

@mixin line-clamp($line: 2) {
    /* autoprefixer: off */
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
    /* autoprefixer: on */
    overflow: hidden;
}


@mixin section_spacing($coeff: 1.5, $property: margin) {
    #{$property}-top: 30px * $coeff;
    #{$property}-bottom: 30px * $coeff;

    @include breakpoint(sm) {
        #{$property}-top: 30px * ($coeff + 1);
        #{$property}-bottom: 30px * ($coeff + 1);
    }
}

@mixin square($ratio) {
    &:after {
        content: "";
        display: block;
        padding-bottom: calc(#{$ratio}/ 12 * 100%);
    }
}

@mixin imageWrapper($fit: "cover", $hidePlaceholder: false) {
    position: relative;
    overflow: hidden;

    & > img,
    & > figure,
    & > picture img,
    & > .iframe-wrap {
        object-fit: #{$fit};
        object-position: center;
        @content;
    }

    & > img,
    & > picture img,
    & > .iframe-wrap {
        position: absolute !important;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        @content;

        @if $hidePlaceholder==true {
            > div {
                display: none;
            }
        }
    }
}